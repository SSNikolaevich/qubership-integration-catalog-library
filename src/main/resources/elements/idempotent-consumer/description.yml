# Copyright 2024-2025 NetCracker Technology Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: idempotent-consumer
title: Idempotent consumer
folder: routing
inputEnabled: true
outputEnabled: true
container: true
mandatoryInnerElement: true
properties:
  common:
    - name: expression
      title: Expression
      type: string
      mandatory: true
    - name: eager
      title: Eager
      type: boolean
      default: true
      description: Sets whether to eagerly add the key to the idempotent \
                   repository or wait until the exchange is complete. \
                   Eager is default enabled.
    - name: completionEager
      title: Completion eager
      type: boolean
      default: false
      description: Sets whether to complete the idempotent consumer eager \
                   or when the exchange is done. If this option is true \
                   to complete eager, then the idempotent consumer will \
                   trigger its completion when the exchange reached the \
                   end of the block of the idempotent consumer pattern. \
                   So if the exchange is continued routed after the block ends, \
                   then whatever happens there does not affect the state. \
                   If this option is false (default) to not complete eager, \
                   then the idempotent consumer will complete when the exchange \
                   is done being routed. \
                   So if the exchange is continued routed after the block ends, \
                   then whatever happens there also affect the state. \
                   For example if the exchange failed due to an exception, \
                   then the state of the idempotent consumer will be a rollback.
    - name: skipDuplicate
      title: Skip duplicate
      type: boolean
      default: true
      description: Sets whether to skip duplicates or not. \
                   The default behavior is to skip duplicates. \
                   A duplicate message would have the Exchange property \
                   org.apache.camel.Exchange#DUPLICATE_MESSAGE set to a Boolean#TRUE value. \
                   A none duplicate message will not have this property set.
    - name: removeOnFailure
      title: Remove on failure
      type: boolean
      default: true
      description: Sets whether to remove or keep the key on failure. \
                   The default behavior is to remove the key on failure.
